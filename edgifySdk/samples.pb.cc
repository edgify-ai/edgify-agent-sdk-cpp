// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: samples.proto

#include "samples.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_samples_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_samples_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DataSample;
}  // namespace protobuf_samples_2eproto
namespace edgify {
class GetSamplesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSamplesRequest>
      _instance;
} _GetSamplesRequest_default_instance_;
class GetSamplesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSamplesResponse>
      _instance;
} _GetSamplesResponse_default_instance_;
class UpdateSampleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateSampleRequest>
      _instance;
} _UpdateSampleRequest_default_instance_;
class UpdateSampleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateSampleResponse>
      _instance;
} _UpdateSampleResponse_default_instance_;
class AddSampleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddSampleRequest>
      _instance;
} _AddSampleRequest_default_instance_;
class AddSampleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddSampleResponse>
      _instance;
} _AddSampleResponse_default_instance_;
class DataSampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataSample>
      _instance;
} _DataSample_default_instance_;
class SyncRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncRequest>
      _instance;
} _SyncRequest_default_instance_;
class SyncResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncResponse>
      _instance;
} _SyncResponse_default_instance_;
class DeleteAllSamplesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteAllSamplesRequest>
      _instance;
} _DeleteAllSamplesRequest_default_instance_;
class DeleteAllSamplesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteAllSamplesResponse>
      _instance;
} _DeleteAllSamplesResponse_default_instance_;
class DeleteSamplesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteSamplesRequest>
      _instance;
} _DeleteSamplesRequest_default_instance_;
class DeleteSampleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteSampleResponse>
      _instance;
} _DeleteSampleResponse_default_instance_;
class DeleteSampleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteSampleRequest>
      _instance;
} _DeleteSampleRequest_default_instance_;
class DeleteSamplesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteSamplesResponse>
      _instance;
} _DeleteSamplesResponse_default_instance_;
}  // namespace edgify
namespace protobuf_samples_2eproto {
static void InitDefaultsGetSamplesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_GetSamplesRequest_default_instance_;
    new (ptr) ::edgify::GetSamplesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::GetSamplesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetSamplesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetSamplesRequest}, {}};

static void InitDefaultsGetSamplesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_GetSamplesResponse_default_instance_;
    new (ptr) ::edgify::GetSamplesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::GetSamplesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetSamplesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetSamplesResponse}, {
      &protobuf_samples_2eproto::scc_info_DataSample.base,}};

static void InitDefaultsUpdateSampleRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_UpdateSampleRequest_default_instance_;
    new (ptr) ::edgify::UpdateSampleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::UpdateSampleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateSampleRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateSampleRequest}, {
      &protobuf_samples_2eproto::scc_info_DataSample.base,}};

static void InitDefaultsUpdateSampleResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_UpdateSampleResponse_default_instance_;
    new (ptr) ::edgify::UpdateSampleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::UpdateSampleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateSampleResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateSampleResponse}, {
      &protobuf_samples_2eproto::scc_info_DataSample.base,}};

static void InitDefaultsAddSampleRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_AddSampleRequest_default_instance_;
    new (ptr) ::edgify::AddSampleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::AddSampleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddSampleRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddSampleRequest}, {
      &protobuf_samples_2eproto::scc_info_DataSample.base,}};

static void InitDefaultsAddSampleResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_AddSampleResponse_default_instance_;
    new (ptr) ::edgify::AddSampleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::AddSampleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddSampleResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddSampleResponse}, {
      &protobuf_samples_2eproto::scc_info_DataSample.base,}};

static void InitDefaultsDataSample() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_DataSample_default_instance_;
    new (ptr) ::edgify::DataSample();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::DataSample::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataSample =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataSample}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsSyncRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_SyncRequest_default_instance_;
    new (ptr) ::edgify::SyncRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::SyncRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SyncRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSyncRequest}, {}};

static void InitDefaultsSyncResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_SyncResponse_default_instance_;
    new (ptr) ::edgify::SyncResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::SyncResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SyncResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSyncResponse}, {}};

static void InitDefaultsDeleteAllSamplesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_DeleteAllSamplesRequest_default_instance_;
    new (ptr) ::edgify::DeleteAllSamplesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::DeleteAllSamplesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteAllSamplesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteAllSamplesRequest}, {}};

static void InitDefaultsDeleteAllSamplesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_DeleteAllSamplesResponse_default_instance_;
    new (ptr) ::edgify::DeleteAllSamplesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::DeleteAllSamplesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteAllSamplesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteAllSamplesResponse}, {}};

static void InitDefaultsDeleteSamplesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_DeleteSamplesRequest_default_instance_;
    new (ptr) ::edgify::DeleteSamplesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::DeleteSamplesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteSamplesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteSamplesRequest}, {}};

static void InitDefaultsDeleteSampleResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_DeleteSampleResponse_default_instance_;
    new (ptr) ::edgify::DeleteSampleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::DeleteSampleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteSampleResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteSampleResponse}, {}};

static void InitDefaultsDeleteSampleRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_DeleteSampleRequest_default_instance_;
    new (ptr) ::edgify::DeleteSampleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::DeleteSampleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteSampleRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteSampleRequest}, {}};

static void InitDefaultsDeleteSamplesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edgify::_DeleteSamplesResponse_default_instance_;
    new (ptr) ::edgify::DeleteSamplesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgify::DeleteSamplesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteSamplesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteSamplesResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetSamplesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetSamplesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateSampleRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateSampleResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddSampleRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddSampleResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataSample.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SyncRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SyncResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteAllSamplesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteAllSamplesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteSamplesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteSampleResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteSampleRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteSamplesResponse.base);
}

::google::protobuf::Metadata file_level_metadata[15];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::GetSamplesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::GetSamplesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::GetSamplesResponse, samples_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::UpdateSampleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::UpdateSampleRequest, sample_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::UpdateSampleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::UpdateSampleResponse, sample_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::AddSampleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::AddSampleRequest, sample_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::AddSampleRequest, file_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::AddSampleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::AddSampleResponse, sample_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DataSample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DataSample, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DataSample, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DataSample, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DataSample, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DataSample, opened_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DataSample, dataset_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DataSample, created_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DataSample, group_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::SyncRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::SyncResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DeleteAllSamplesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DeleteAllSamplesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DeleteSamplesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DeleteSamplesRequest, uuids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DeleteSampleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DeleteSampleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DeleteSampleRequest, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgify::DeleteSamplesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::edgify::GetSamplesRequest)},
  { 5, -1, sizeof(::edgify::GetSamplesResponse)},
  { 11, -1, sizeof(::edgify::UpdateSampleRequest)},
  { 17, -1, sizeof(::edgify::UpdateSampleResponse)},
  { 23, -1, sizeof(::edgify::AddSampleRequest)},
  { 30, -1, sizeof(::edgify::AddSampleResponse)},
  { 36, -1, sizeof(::edgify::DataSample)},
  { 49, -1, sizeof(::edgify::SyncRequest)},
  { 54, -1, sizeof(::edgify::SyncResponse)},
  { 59, -1, sizeof(::edgify::DeleteAllSamplesRequest)},
  { 64, -1, sizeof(::edgify::DeleteAllSamplesResponse)},
  { 69, -1, sizeof(::edgify::DeleteSamplesRequest)},
  { 75, -1, sizeof(::edgify::DeleteSampleResponse)},
  { 80, -1, sizeof(::edgify::DeleteSampleRequest)},
  { 86, -1, sizeof(::edgify::DeleteSamplesResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_GetSamplesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_GetSamplesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_UpdateSampleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_UpdateSampleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_AddSampleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_AddSampleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_DataSample_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_SyncRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_SyncResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_DeleteAllSamplesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_DeleteAllSamplesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_DeleteSamplesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_DeleteSampleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_DeleteSampleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgify::_DeleteSamplesResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "samples.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rsamples.proto\022\006edgify\032\037google/protobuf"
      "/timestamp.proto\"\023\n\021GetSamplesRequest\"9\n"
      "\022GetSamplesResponse\022#\n\007samples\030\001 \003(\0132\022.e"
      "dgify.DataSample\"9\n\023UpdateSampleRequest\022"
      "\"\n\006sample\030\001 \001(\0132\022.edgify.DataSample\":\n\024U"
      "pdateSampleResponse\022\"\n\006sample\030\001 \001(\0132\022.ed"
      "gify.DataSample\"D\n\020AddSampleRequest\022\"\n\006s"
      "ample\030\001 \001(\0132\022.edgify.DataSample\022\014\n\004file\030"
      "\002 \001(\014\"7\n\021AddSampleResponse\022\"\n\006sample\030\001 \001"
      "(\0132\022.edgify.DataSample\"\255\001\n\nDataSample\022\014\n"
      "\004uuid\030\001 \001(\t\022\014\n\004path\030\002 \001(\t\022\r\n\005label\030\003 \001(\t"
      "\022\014\n\004size\030\004 \001(\004\022\016\n\006opened\030\005 \001(\010\022\024\n\014datase"
      "t_type\030\006 \001(\t\022.\n\ncreated_at\030\007 \001(\0132\032.googl"
      "e.protobuf.Timestamp\022\020\n\010group_id\030\010 \001(\t\"\r"
      "\n\013SyncRequest\"\016\n\014SyncResponse\"\031\n\027DeleteA"
      "llSamplesRequest\"\032\n\030DeleteAllSamplesResp"
      "onse\"%\n\024DeleteSamplesRequest\022\r\n\005uuids\030\001 "
      "\003(\t\"\026\n\024DeleteSampleResponse\"#\n\023DeleteSam"
      "pleRequest\022\014\n\004uuid\030\001 \001(\t\"\027\n\025DeleteSample"
      "sResponse2\223\004\n\016SamplesService\022E\n\nGetSampl"
      "es\022\031.edgify.GetSamplesRequest\032\032.edgify.G"
      "etSamplesResponse\"\000\022B\n\tAddSample\022\030.edgif"
      "y.AddSampleRequest\032\031.edgify.AddSampleRes"
      "ponse\"\000\022K\n\014UpdateSample\022\033.edgify.UpdateS"
      "ampleRequest\032\034.edgify.UpdateSampleRespon"
      "se\"\000\0223\n\004Sync\022\023.edgify.SyncRequest\032\024.edgi"
      "fy.SyncResponse\"\000\022W\n\020DeleteAllSamples\022\037."
      "edgify.DeleteAllSamplesRequest\032 .edgify."
      "DeleteAllSamplesResponse\"\000\022N\n\rDeleteSamp"
      "les\022\034.edgify.DeleteSamplesRequest\032\035.edgi"
      "fy.DeleteSamplesResponse\"\000\022K\n\014DeleteSamp"
      "le\022\033.edgify.DeleteSampleRequest\032\034.edgify"
      ".DeleteSampleResponse\"\000B\nZ\010edgifypbb\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1323);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "samples.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_samples_2eproto
namespace edgify {

// ===================================================================

void GetSamplesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSamplesRequest::GetSamplesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_GetSamplesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.GetSamplesRequest)
}
GetSamplesRequest::GetSamplesRequest(const GetSamplesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:edgify.GetSamplesRequest)
}

void GetSamplesRequest::SharedCtor() {
}

GetSamplesRequest::~GetSamplesRequest() {
  // @@protoc_insertion_point(destructor:edgify.GetSamplesRequest)
  SharedDtor();
}

void GetSamplesRequest::SharedDtor() {
}

void GetSamplesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetSamplesRequest::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSamplesRequest& GetSamplesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_GetSamplesRequest.base);
  return *internal_default_instance();
}


void GetSamplesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.GetSamplesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetSamplesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.GetSamplesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.GetSamplesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.GetSamplesRequest)
  return false;
#undef DO_
}

void GetSamplesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.GetSamplesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.GetSamplesRequest)
}

::google::protobuf::uint8* GetSamplesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.GetSamplesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.GetSamplesRequest)
  return target;
}

size_t GetSamplesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.GetSamplesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSamplesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.GetSamplesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSamplesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSamplesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.GetSamplesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.GetSamplesRequest)
    MergeFrom(*source);
  }
}

void GetSamplesRequest::MergeFrom(const GetSamplesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.GetSamplesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetSamplesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.GetSamplesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSamplesRequest::CopyFrom(const GetSamplesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.GetSamplesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSamplesRequest::IsInitialized() const {
  return true;
}

void GetSamplesRequest::Swap(GetSamplesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSamplesRequest::InternalSwap(GetSamplesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetSamplesRequest::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetSamplesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSamplesResponse::kSamplesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSamplesResponse::GetSamplesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_GetSamplesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.GetSamplesResponse)
}
GetSamplesResponse::GetSamplesResponse(const GetSamplesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      samples_(from.samples_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:edgify.GetSamplesResponse)
}

void GetSamplesResponse::SharedCtor() {
}

GetSamplesResponse::~GetSamplesResponse() {
  // @@protoc_insertion_point(destructor:edgify.GetSamplesResponse)
  SharedDtor();
}

void GetSamplesResponse::SharedDtor() {
}

void GetSamplesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetSamplesResponse::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSamplesResponse& GetSamplesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_GetSamplesResponse.base);
  return *internal_default_instance();
}


void GetSamplesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.GetSamplesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  samples_.Clear();
  _internal_metadata_.Clear();
}

bool GetSamplesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.GetSamplesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .edgify.DataSample samples = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_samples()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.GetSamplesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.GetSamplesResponse)
  return false;
#undef DO_
}

void GetSamplesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.GetSamplesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .edgify.DataSample samples = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->samples_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->samples(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.GetSamplesResponse)
}

::google::protobuf::uint8* GetSamplesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.GetSamplesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .edgify.DataSample samples = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->samples_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->samples(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.GetSamplesResponse)
  return target;
}

size_t GetSamplesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.GetSamplesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .edgify.DataSample samples = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->samples_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->samples(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSamplesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.GetSamplesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSamplesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSamplesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.GetSamplesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.GetSamplesResponse)
    MergeFrom(*source);
  }
}

void GetSamplesResponse::MergeFrom(const GetSamplesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.GetSamplesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  samples_.MergeFrom(from.samples_);
}

void GetSamplesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.GetSamplesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSamplesResponse::CopyFrom(const GetSamplesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.GetSamplesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSamplesResponse::IsInitialized() const {
  return true;
}

void GetSamplesResponse::Swap(GetSamplesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSamplesResponse::InternalSwap(GetSamplesResponse* other) {
  using std::swap;
  CastToBase(&samples_)->InternalSwap(CastToBase(&other->samples_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetSamplesResponse::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateSampleRequest::InitAsDefaultInstance() {
  ::edgify::_UpdateSampleRequest_default_instance_._instance.get_mutable()->sample_ = const_cast< ::edgify::DataSample*>(
      ::edgify::DataSample::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateSampleRequest::kSampleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateSampleRequest::UpdateSampleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_UpdateSampleRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.UpdateSampleRequest)
}
UpdateSampleRequest::UpdateSampleRequest(const UpdateSampleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sample()) {
    sample_ = new ::edgify::DataSample(*from.sample_);
  } else {
    sample_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:edgify.UpdateSampleRequest)
}

void UpdateSampleRequest::SharedCtor() {
  sample_ = NULL;
}

UpdateSampleRequest::~UpdateSampleRequest() {
  // @@protoc_insertion_point(destructor:edgify.UpdateSampleRequest)
  SharedDtor();
}

void UpdateSampleRequest::SharedDtor() {
  if (this != internal_default_instance()) delete sample_;
}

void UpdateSampleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateSampleRequest::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateSampleRequest& UpdateSampleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_UpdateSampleRequest.base);
  return *internal_default_instance();
}


void UpdateSampleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.UpdateSampleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sample_ != NULL) {
    delete sample_;
  }
  sample_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateSampleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.UpdateSampleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .edgify.DataSample sample = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sample()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.UpdateSampleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.UpdateSampleRequest)
  return false;
#undef DO_
}

void UpdateSampleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.UpdateSampleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .edgify.DataSample sample = 1;
  if (this->has_sample()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_sample(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.UpdateSampleRequest)
}

::google::protobuf::uint8* UpdateSampleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.UpdateSampleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .edgify.DataSample sample = 1;
  if (this->has_sample()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_sample(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.UpdateSampleRequest)
  return target;
}

size_t UpdateSampleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.UpdateSampleRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .edgify.DataSample sample = 1;
  if (this->has_sample()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sample_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateSampleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.UpdateSampleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateSampleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateSampleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.UpdateSampleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.UpdateSampleRequest)
    MergeFrom(*source);
  }
}

void UpdateSampleRequest::MergeFrom(const UpdateSampleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.UpdateSampleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sample()) {
    mutable_sample()->::edgify::DataSample::MergeFrom(from.sample());
  }
}

void UpdateSampleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.UpdateSampleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSampleRequest::CopyFrom(const UpdateSampleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.UpdateSampleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSampleRequest::IsInitialized() const {
  return true;
}

void UpdateSampleRequest::Swap(UpdateSampleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateSampleRequest::InternalSwap(UpdateSampleRequest* other) {
  using std::swap;
  swap(sample_, other->sample_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateSampleRequest::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateSampleResponse::InitAsDefaultInstance() {
  ::edgify::_UpdateSampleResponse_default_instance_._instance.get_mutable()->sample_ = const_cast< ::edgify::DataSample*>(
      ::edgify::DataSample::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateSampleResponse::kSampleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateSampleResponse::UpdateSampleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_UpdateSampleResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.UpdateSampleResponse)
}
UpdateSampleResponse::UpdateSampleResponse(const UpdateSampleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sample()) {
    sample_ = new ::edgify::DataSample(*from.sample_);
  } else {
    sample_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:edgify.UpdateSampleResponse)
}

void UpdateSampleResponse::SharedCtor() {
  sample_ = NULL;
}

UpdateSampleResponse::~UpdateSampleResponse() {
  // @@protoc_insertion_point(destructor:edgify.UpdateSampleResponse)
  SharedDtor();
}

void UpdateSampleResponse::SharedDtor() {
  if (this != internal_default_instance()) delete sample_;
}

void UpdateSampleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateSampleResponse::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateSampleResponse& UpdateSampleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_UpdateSampleResponse.base);
  return *internal_default_instance();
}


void UpdateSampleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.UpdateSampleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sample_ != NULL) {
    delete sample_;
  }
  sample_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateSampleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.UpdateSampleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .edgify.DataSample sample = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sample()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.UpdateSampleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.UpdateSampleResponse)
  return false;
#undef DO_
}

void UpdateSampleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.UpdateSampleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .edgify.DataSample sample = 1;
  if (this->has_sample()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_sample(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.UpdateSampleResponse)
}

::google::protobuf::uint8* UpdateSampleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.UpdateSampleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .edgify.DataSample sample = 1;
  if (this->has_sample()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_sample(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.UpdateSampleResponse)
  return target;
}

size_t UpdateSampleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.UpdateSampleResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .edgify.DataSample sample = 1;
  if (this->has_sample()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sample_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateSampleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.UpdateSampleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateSampleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateSampleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.UpdateSampleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.UpdateSampleResponse)
    MergeFrom(*source);
  }
}

void UpdateSampleResponse::MergeFrom(const UpdateSampleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.UpdateSampleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sample()) {
    mutable_sample()->::edgify::DataSample::MergeFrom(from.sample());
  }
}

void UpdateSampleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.UpdateSampleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSampleResponse::CopyFrom(const UpdateSampleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.UpdateSampleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSampleResponse::IsInitialized() const {
  return true;
}

void UpdateSampleResponse::Swap(UpdateSampleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateSampleResponse::InternalSwap(UpdateSampleResponse* other) {
  using std::swap;
  swap(sample_, other->sample_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateSampleResponse::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddSampleRequest::InitAsDefaultInstance() {
  ::edgify::_AddSampleRequest_default_instance_._instance.get_mutable()->sample_ = const_cast< ::edgify::DataSample*>(
      ::edgify::DataSample::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddSampleRequest::kSampleFieldNumber;
const int AddSampleRequest::kFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddSampleRequest::AddSampleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_AddSampleRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.AddSampleRequest)
}
AddSampleRequest::AddSampleRequest(const AddSampleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file().size() > 0) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.has_sample()) {
    sample_ = new ::edgify::DataSample(*from.sample_);
  } else {
    sample_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:edgify.AddSampleRequest)
}

void AddSampleRequest::SharedCtor() {
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sample_ = NULL;
}

AddSampleRequest::~AddSampleRequest() {
  // @@protoc_insertion_point(destructor:edgify.AddSampleRequest)
  SharedDtor();
}

void AddSampleRequest::SharedDtor() {
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete sample_;
}

void AddSampleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddSampleRequest::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddSampleRequest& AddSampleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_AddSampleRequest.base);
  return *internal_default_instance();
}


void AddSampleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.AddSampleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && sample_ != NULL) {
    delete sample_;
  }
  sample_ = NULL;
  _internal_metadata_.Clear();
}

bool AddSampleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.AddSampleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .edgify.DataSample sample = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sample()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.AddSampleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.AddSampleRequest)
  return false;
#undef DO_
}

void AddSampleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.AddSampleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .edgify.DataSample sample = 1;
  if (this->has_sample()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_sample(), output);
  }

  // bytes file = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->file(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.AddSampleRequest)
}

::google::protobuf::uint8* AddSampleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.AddSampleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .edgify.DataSample sample = 1;
  if (this->has_sample()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_sample(), deterministic, target);
  }

  // bytes file = 2;
  if (this->file().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->file(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.AddSampleRequest)
  return target;
}

size_t AddSampleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.AddSampleRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes file = 2;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->file());
  }

  // .edgify.DataSample sample = 1;
  if (this->has_sample()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sample_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSampleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.AddSampleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSampleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddSampleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.AddSampleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.AddSampleRequest)
    MergeFrom(*source);
  }
}

void AddSampleRequest::MergeFrom(const AddSampleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.AddSampleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.has_sample()) {
    mutable_sample()->::edgify::DataSample::MergeFrom(from.sample());
  }
}

void AddSampleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.AddSampleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSampleRequest::CopyFrom(const AddSampleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.AddSampleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSampleRequest::IsInitialized() const {
  return true;
}

void AddSampleRequest::Swap(AddSampleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddSampleRequest::InternalSwap(AddSampleRequest* other) {
  using std::swap;
  file_.Swap(&other->file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sample_, other->sample_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddSampleRequest::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddSampleResponse::InitAsDefaultInstance() {
  ::edgify::_AddSampleResponse_default_instance_._instance.get_mutable()->sample_ = const_cast< ::edgify::DataSample*>(
      ::edgify::DataSample::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddSampleResponse::kSampleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddSampleResponse::AddSampleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_AddSampleResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.AddSampleResponse)
}
AddSampleResponse::AddSampleResponse(const AddSampleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sample()) {
    sample_ = new ::edgify::DataSample(*from.sample_);
  } else {
    sample_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:edgify.AddSampleResponse)
}

void AddSampleResponse::SharedCtor() {
  sample_ = NULL;
}

AddSampleResponse::~AddSampleResponse() {
  // @@protoc_insertion_point(destructor:edgify.AddSampleResponse)
  SharedDtor();
}

void AddSampleResponse::SharedDtor() {
  if (this != internal_default_instance()) delete sample_;
}

void AddSampleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddSampleResponse::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddSampleResponse& AddSampleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_AddSampleResponse.base);
  return *internal_default_instance();
}


void AddSampleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.AddSampleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sample_ != NULL) {
    delete sample_;
  }
  sample_ = NULL;
  _internal_metadata_.Clear();
}

bool AddSampleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.AddSampleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .edgify.DataSample sample = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sample()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.AddSampleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.AddSampleResponse)
  return false;
#undef DO_
}

void AddSampleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.AddSampleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .edgify.DataSample sample = 1;
  if (this->has_sample()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_sample(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.AddSampleResponse)
}

::google::protobuf::uint8* AddSampleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.AddSampleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .edgify.DataSample sample = 1;
  if (this->has_sample()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_sample(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.AddSampleResponse)
  return target;
}

size_t AddSampleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.AddSampleResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .edgify.DataSample sample = 1;
  if (this->has_sample()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sample_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSampleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.AddSampleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSampleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddSampleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.AddSampleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.AddSampleResponse)
    MergeFrom(*source);
  }
}

void AddSampleResponse::MergeFrom(const AddSampleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.AddSampleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sample()) {
    mutable_sample()->::edgify::DataSample::MergeFrom(from.sample());
  }
}

void AddSampleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.AddSampleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSampleResponse::CopyFrom(const AddSampleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.AddSampleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSampleResponse::IsInitialized() const {
  return true;
}

void AddSampleResponse::Swap(AddSampleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddSampleResponse::InternalSwap(AddSampleResponse* other) {
  using std::swap;
  swap(sample_, other->sample_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddSampleResponse::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataSample::InitAsDefaultInstance() {
  ::edgify::_DataSample_default_instance_._instance.get_mutable()->created_at_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void DataSample::clear_created_at() {
  if (GetArenaNoVirtual() == NULL && created_at_ != NULL) {
    delete created_at_;
  }
  created_at_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataSample::kUuidFieldNumber;
const int DataSample::kPathFieldNumber;
const int DataSample::kLabelFieldNumber;
const int DataSample::kSizeFieldNumber;
const int DataSample::kOpenedFieldNumber;
const int DataSample::kDatasetTypeFieldNumber;
const int DataSample::kCreatedAtFieldNumber;
const int DataSample::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataSample::DataSample()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_DataSample.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.DataSample)
}
DataSample::DataSample(const DataSample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  dataset_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dataset_type().size() > 0) {
    dataset_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataset_type_);
  }
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_id().size() > 0) {
    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  if (from.has_created_at()) {
    created_at_ = new ::google::protobuf::Timestamp(*from.created_at_);
  } else {
    created_at_ = NULL;
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&opened_) -
    reinterpret_cast<char*>(&size_)) + sizeof(opened_));
  // @@protoc_insertion_point(copy_constructor:edgify.DataSample)
}

void DataSample::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opened_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(opened_));
}

DataSample::~DataSample() {
  // @@protoc_insertion_point(destructor:edgify.DataSample)
  SharedDtor();
}

void DataSample::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
}

void DataSample::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataSample::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataSample& DataSample::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_DataSample.base);
  return *internal_default_instance();
}


void DataSample::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.DataSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && created_at_ != NULL) {
    delete created_at_;
  }
  created_at_ = NULL;
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opened_) -
      reinterpret_cast<char*>(&size_)) + sizeof(opened_));
  _internal_metadata_.Clear();
}

bool DataSample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.DataSample)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "edgify.DataSample.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "edgify.DataSample.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "edgify.DataSample.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool opened = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &opened_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dataset_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dataset_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dataset_type().data(), static_cast<int>(this->dataset_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "edgify.DataSample.dataset_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp created_at = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_created_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_id().data(), static_cast<int>(this->group_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "edgify.DataSample.group_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.DataSample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.DataSample)
  return false;
#undef DO_
}

void DataSample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.DataSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DataSample.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uuid(), output);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DataSample.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // string label = 3;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DataSample.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->label(), output);
  }

  // uint64 size = 4;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->size(), output);
  }

  // bool opened = 5;
  if (this->opened() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->opened(), output);
  }

  // string dataset_type = 6;
  if (this->dataset_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset_type().data(), static_cast<int>(this->dataset_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DataSample.dataset_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->dataset_type(), output);
  }

  // .google.protobuf.Timestamp created_at = 7;
  if (this->has_created_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_created_at(), output);
  }

  // string group_id = 8;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DataSample.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->group_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.DataSample)
}

::google::protobuf::uint8* DataSample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.DataSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DataSample.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uuid(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DataSample.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // string label = 3;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DataSample.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->label(), target);
  }

  // uint64 size = 4;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->size(), target);
  }

  // bool opened = 5;
  if (this->opened() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->opened(), target);
  }

  // string dataset_type = 6;
  if (this->dataset_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset_type().data(), static_cast<int>(this->dataset_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DataSample.dataset_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->dataset_type(), target);
  }

  // .google.protobuf.Timestamp created_at = 7;
  if (this->has_created_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_created_at(), deterministic, target);
  }

  // string group_id = 8;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DataSample.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->group_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.DataSample)
  return target;
}

size_t DataSample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.DataSample)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string label = 3;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // string dataset_type = 6;
  if (this->dataset_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dataset_type());
  }

  // string group_id = 8;
  if (this->group_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }

  // .google.protobuf.Timestamp created_at = 7;
  if (this->has_created_at()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // uint64 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  // bool opened = 5;
  if (this->opened() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataSample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.DataSample)
  GOOGLE_DCHECK_NE(&from, this);
  const DataSample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataSample>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.DataSample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.DataSample)
    MergeFrom(*source);
  }
}

void DataSample::MergeFrom(const DataSample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.DataSample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.dataset_type().size() > 0) {

    dataset_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataset_type_);
  }
  if (from.group_id().size() > 0) {

    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  if (from.has_created_at()) {
    mutable_created_at()->::google::protobuf::Timestamp::MergeFrom(from.created_at());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.opened() != 0) {
    set_opened(from.opened());
  }
}

void DataSample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.DataSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataSample::CopyFrom(const DataSample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.DataSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataSample::IsInitialized() const {
  return true;
}

void DataSample::Swap(DataSample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataSample::InternalSwap(DataSample* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dataset_type_.Swap(&other->dataset_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  group_id_.Swap(&other->group_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(created_at_, other->created_at_);
  swap(size_, other->size_);
  swap(opened_, other->opened_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataSample::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncRequest::SyncRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_SyncRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.SyncRequest)
}
SyncRequest::SyncRequest(const SyncRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:edgify.SyncRequest)
}

void SyncRequest::SharedCtor() {
}

SyncRequest::~SyncRequest() {
  // @@protoc_insertion_point(destructor:edgify.SyncRequest)
  SharedDtor();
}

void SyncRequest::SharedDtor() {
}

void SyncRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SyncRequest::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncRequest& SyncRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_SyncRequest.base);
  return *internal_default_instance();
}


void SyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.SyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SyncRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.SyncRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.SyncRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.SyncRequest)
  return false;
#undef DO_
}

void SyncRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.SyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.SyncRequest)
}

::google::protobuf::uint8* SyncRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.SyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.SyncRequest)
  return target;
}

size_t SyncRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.SyncRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.SyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.SyncRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.SyncRequest)
    MergeFrom(*source);
  }
}

void SyncRequest::MergeFrom(const SyncRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.SyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SyncRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.SyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncRequest::CopyFrom(const SyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.SyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncRequest::IsInitialized() const {
  return true;
}

void SyncRequest::Swap(SyncRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncRequest::InternalSwap(SyncRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SyncRequest::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncResponse::SyncResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_SyncResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.SyncResponse)
}
SyncResponse::SyncResponse(const SyncResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:edgify.SyncResponse)
}

void SyncResponse::SharedCtor() {
}

SyncResponse::~SyncResponse() {
  // @@protoc_insertion_point(destructor:edgify.SyncResponse)
  SharedDtor();
}

void SyncResponse::SharedDtor() {
}

void SyncResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SyncResponse::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncResponse& SyncResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_SyncResponse.base);
  return *internal_default_instance();
}


void SyncResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.SyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SyncResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.SyncResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.SyncResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.SyncResponse)
  return false;
#undef DO_
}

void SyncResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.SyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.SyncResponse)
}

::google::protobuf::uint8* SyncResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.SyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.SyncResponse)
  return target;
}

size_t SyncResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.SyncResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.SyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.SyncResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.SyncResponse)
    MergeFrom(*source);
  }
}

void SyncResponse::MergeFrom(const SyncResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.SyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SyncResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.SyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncResponse::CopyFrom(const SyncResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.SyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncResponse::IsInitialized() const {
  return true;
}

void SyncResponse::Swap(SyncResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncResponse::InternalSwap(SyncResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SyncResponse::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteAllSamplesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteAllSamplesRequest::DeleteAllSamplesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_DeleteAllSamplesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.DeleteAllSamplesRequest)
}
DeleteAllSamplesRequest::DeleteAllSamplesRequest(const DeleteAllSamplesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:edgify.DeleteAllSamplesRequest)
}

void DeleteAllSamplesRequest::SharedCtor() {
}

DeleteAllSamplesRequest::~DeleteAllSamplesRequest() {
  // @@protoc_insertion_point(destructor:edgify.DeleteAllSamplesRequest)
  SharedDtor();
}

void DeleteAllSamplesRequest::SharedDtor() {
}

void DeleteAllSamplesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteAllSamplesRequest::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteAllSamplesRequest& DeleteAllSamplesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_DeleteAllSamplesRequest.base);
  return *internal_default_instance();
}


void DeleteAllSamplesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.DeleteAllSamplesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DeleteAllSamplesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.DeleteAllSamplesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.DeleteAllSamplesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.DeleteAllSamplesRequest)
  return false;
#undef DO_
}

void DeleteAllSamplesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.DeleteAllSamplesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.DeleteAllSamplesRequest)
}

::google::protobuf::uint8* DeleteAllSamplesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.DeleteAllSamplesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.DeleteAllSamplesRequest)
  return target;
}

size_t DeleteAllSamplesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.DeleteAllSamplesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAllSamplesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.DeleteAllSamplesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAllSamplesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteAllSamplesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.DeleteAllSamplesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.DeleteAllSamplesRequest)
    MergeFrom(*source);
  }
}

void DeleteAllSamplesRequest::MergeFrom(const DeleteAllSamplesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.DeleteAllSamplesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteAllSamplesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.DeleteAllSamplesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAllSamplesRequest::CopyFrom(const DeleteAllSamplesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.DeleteAllSamplesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAllSamplesRequest::IsInitialized() const {
  return true;
}

void DeleteAllSamplesRequest::Swap(DeleteAllSamplesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteAllSamplesRequest::InternalSwap(DeleteAllSamplesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteAllSamplesRequest::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteAllSamplesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteAllSamplesResponse::DeleteAllSamplesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_DeleteAllSamplesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.DeleteAllSamplesResponse)
}
DeleteAllSamplesResponse::DeleteAllSamplesResponse(const DeleteAllSamplesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:edgify.DeleteAllSamplesResponse)
}

void DeleteAllSamplesResponse::SharedCtor() {
}

DeleteAllSamplesResponse::~DeleteAllSamplesResponse() {
  // @@protoc_insertion_point(destructor:edgify.DeleteAllSamplesResponse)
  SharedDtor();
}

void DeleteAllSamplesResponse::SharedDtor() {
}

void DeleteAllSamplesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteAllSamplesResponse::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteAllSamplesResponse& DeleteAllSamplesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_DeleteAllSamplesResponse.base);
  return *internal_default_instance();
}


void DeleteAllSamplesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.DeleteAllSamplesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DeleteAllSamplesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.DeleteAllSamplesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.DeleteAllSamplesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.DeleteAllSamplesResponse)
  return false;
#undef DO_
}

void DeleteAllSamplesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.DeleteAllSamplesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.DeleteAllSamplesResponse)
}

::google::protobuf::uint8* DeleteAllSamplesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.DeleteAllSamplesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.DeleteAllSamplesResponse)
  return target;
}

size_t DeleteAllSamplesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.DeleteAllSamplesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAllSamplesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.DeleteAllSamplesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAllSamplesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteAllSamplesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.DeleteAllSamplesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.DeleteAllSamplesResponse)
    MergeFrom(*source);
  }
}

void DeleteAllSamplesResponse::MergeFrom(const DeleteAllSamplesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.DeleteAllSamplesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteAllSamplesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.DeleteAllSamplesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAllSamplesResponse::CopyFrom(const DeleteAllSamplesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.DeleteAllSamplesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAllSamplesResponse::IsInitialized() const {
  return true;
}

void DeleteAllSamplesResponse::Swap(DeleteAllSamplesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteAllSamplesResponse::InternalSwap(DeleteAllSamplesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteAllSamplesResponse::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteSamplesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteSamplesRequest::kUuidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteSamplesRequest::DeleteSamplesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_DeleteSamplesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.DeleteSamplesRequest)
}
DeleteSamplesRequest::DeleteSamplesRequest(const DeleteSamplesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uuids_(from.uuids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:edgify.DeleteSamplesRequest)
}

void DeleteSamplesRequest::SharedCtor() {
}

DeleteSamplesRequest::~DeleteSamplesRequest() {
  // @@protoc_insertion_point(destructor:edgify.DeleteSamplesRequest)
  SharedDtor();
}

void DeleteSamplesRequest::SharedDtor() {
}

void DeleteSamplesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteSamplesRequest::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteSamplesRequest& DeleteSamplesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_DeleteSamplesRequest.base);
  return *internal_default_instance();
}


void DeleteSamplesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.DeleteSamplesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuids_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteSamplesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.DeleteSamplesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string uuids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_uuids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuids(this->uuids_size() - 1).data(),
            static_cast<int>(this->uuids(this->uuids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "edgify.DeleteSamplesRequest.uuids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.DeleteSamplesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.DeleteSamplesRequest)
  return false;
#undef DO_
}

void DeleteSamplesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.DeleteSamplesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string uuids = 1;
  for (int i = 0, n = this->uuids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuids(i).data(), static_cast<int>(this->uuids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DeleteSamplesRequest.uuids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uuids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.DeleteSamplesRequest)
}

::google::protobuf::uint8* DeleteSamplesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.DeleteSamplesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string uuids = 1;
  for (int i = 0, n = this->uuids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuids(i).data(), static_cast<int>(this->uuids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DeleteSamplesRequest.uuids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->uuids(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.DeleteSamplesRequest)
  return target;
}

size_t DeleteSamplesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.DeleteSamplesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string uuids = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->uuids_size());
  for (int i = 0, n = this->uuids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->uuids(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSamplesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.DeleteSamplesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSamplesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteSamplesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.DeleteSamplesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.DeleteSamplesRequest)
    MergeFrom(*source);
  }
}

void DeleteSamplesRequest::MergeFrom(const DeleteSamplesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.DeleteSamplesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uuids_.MergeFrom(from.uuids_);
}

void DeleteSamplesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.DeleteSamplesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSamplesRequest::CopyFrom(const DeleteSamplesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.DeleteSamplesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSamplesRequest::IsInitialized() const {
  return true;
}

void DeleteSamplesRequest::Swap(DeleteSamplesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteSamplesRequest::InternalSwap(DeleteSamplesRequest* other) {
  using std::swap;
  uuids_.InternalSwap(CastToBase(&other->uuids_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteSamplesRequest::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteSampleResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteSampleResponse::DeleteSampleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_DeleteSampleResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.DeleteSampleResponse)
}
DeleteSampleResponse::DeleteSampleResponse(const DeleteSampleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:edgify.DeleteSampleResponse)
}

void DeleteSampleResponse::SharedCtor() {
}

DeleteSampleResponse::~DeleteSampleResponse() {
  // @@protoc_insertion_point(destructor:edgify.DeleteSampleResponse)
  SharedDtor();
}

void DeleteSampleResponse::SharedDtor() {
}

void DeleteSampleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteSampleResponse::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteSampleResponse& DeleteSampleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_DeleteSampleResponse.base);
  return *internal_default_instance();
}


void DeleteSampleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.DeleteSampleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DeleteSampleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.DeleteSampleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.DeleteSampleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.DeleteSampleResponse)
  return false;
#undef DO_
}

void DeleteSampleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.DeleteSampleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.DeleteSampleResponse)
}

::google::protobuf::uint8* DeleteSampleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.DeleteSampleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.DeleteSampleResponse)
  return target;
}

size_t DeleteSampleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.DeleteSampleResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSampleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.DeleteSampleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSampleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteSampleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.DeleteSampleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.DeleteSampleResponse)
    MergeFrom(*source);
  }
}

void DeleteSampleResponse::MergeFrom(const DeleteSampleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.DeleteSampleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteSampleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.DeleteSampleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSampleResponse::CopyFrom(const DeleteSampleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.DeleteSampleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSampleResponse::IsInitialized() const {
  return true;
}

void DeleteSampleResponse::Swap(DeleteSampleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteSampleResponse::InternalSwap(DeleteSampleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteSampleResponse::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteSampleRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteSampleRequest::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteSampleRequest::DeleteSampleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_DeleteSampleRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.DeleteSampleRequest)
}
DeleteSampleRequest::DeleteSampleRequest(const DeleteSampleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:edgify.DeleteSampleRequest)
}

void DeleteSampleRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteSampleRequest::~DeleteSampleRequest() {
  // @@protoc_insertion_point(destructor:edgify.DeleteSampleRequest)
  SharedDtor();
}

void DeleteSampleRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteSampleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteSampleRequest::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteSampleRequest& DeleteSampleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_DeleteSampleRequest.base);
  return *internal_default_instance();
}


void DeleteSampleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.DeleteSampleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteSampleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.DeleteSampleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "edgify.DeleteSampleRequest.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.DeleteSampleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.DeleteSampleRequest)
  return false;
#undef DO_
}

void DeleteSampleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.DeleteSampleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DeleteSampleRequest.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.DeleteSampleRequest)
}

::google::protobuf::uint8* DeleteSampleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.DeleteSampleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgify.DeleteSampleRequest.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.DeleteSampleRequest)
  return target;
}

size_t DeleteSampleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.DeleteSampleRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSampleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.DeleteSampleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSampleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteSampleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.DeleteSampleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.DeleteSampleRequest)
    MergeFrom(*source);
  }
}

void DeleteSampleRequest::MergeFrom(const DeleteSampleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.DeleteSampleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void DeleteSampleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.DeleteSampleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSampleRequest::CopyFrom(const DeleteSampleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.DeleteSampleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSampleRequest::IsInitialized() const {
  return true;
}

void DeleteSampleRequest::Swap(DeleteSampleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteSampleRequest::InternalSwap(DeleteSampleRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteSampleRequest::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteSamplesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteSamplesResponse::DeleteSamplesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_samples_2eproto::scc_info_DeleteSamplesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgify.DeleteSamplesResponse)
}
DeleteSamplesResponse::DeleteSamplesResponse(const DeleteSamplesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:edgify.DeleteSamplesResponse)
}

void DeleteSamplesResponse::SharedCtor() {
}

DeleteSamplesResponse::~DeleteSamplesResponse() {
  // @@protoc_insertion_point(destructor:edgify.DeleteSamplesResponse)
  SharedDtor();
}

void DeleteSamplesResponse::SharedDtor() {
}

void DeleteSamplesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteSamplesResponse::descriptor() {
  ::protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteSamplesResponse& DeleteSamplesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_samples_2eproto::scc_info_DeleteSamplesResponse.base);
  return *internal_default_instance();
}


void DeleteSamplesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.DeleteSamplesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DeleteSamplesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgify.DeleteSamplesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:edgify.DeleteSamplesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgify.DeleteSamplesResponse)
  return false;
#undef DO_
}

void DeleteSamplesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgify.DeleteSamplesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgify.DeleteSamplesResponse)
}

::google::protobuf::uint8* DeleteSamplesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgify.DeleteSamplesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.DeleteSamplesResponse)
  return target;
}

size_t DeleteSamplesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.DeleteSamplesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSamplesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.DeleteSamplesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSamplesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteSamplesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.DeleteSamplesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.DeleteSamplesResponse)
    MergeFrom(*source);
  }
}

void DeleteSamplesResponse::MergeFrom(const DeleteSamplesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.DeleteSamplesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteSamplesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.DeleteSamplesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSamplesResponse::CopyFrom(const DeleteSamplesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.DeleteSamplesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSamplesResponse::IsInitialized() const {
  return true;
}

void DeleteSamplesResponse::Swap(DeleteSamplesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteSamplesResponse::InternalSwap(DeleteSamplesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteSamplesResponse::GetMetadata() const {
  protobuf_samples_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_samples_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace edgify
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::GetSamplesRequest* Arena::CreateMaybeMessage< ::edgify::GetSamplesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::GetSamplesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::GetSamplesResponse* Arena::CreateMaybeMessage< ::edgify::GetSamplesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::GetSamplesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::UpdateSampleRequest* Arena::CreateMaybeMessage< ::edgify::UpdateSampleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::UpdateSampleRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::UpdateSampleResponse* Arena::CreateMaybeMessage< ::edgify::UpdateSampleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::UpdateSampleResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::AddSampleRequest* Arena::CreateMaybeMessage< ::edgify::AddSampleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::AddSampleRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::AddSampleResponse* Arena::CreateMaybeMessage< ::edgify::AddSampleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::AddSampleResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::DataSample* Arena::CreateMaybeMessage< ::edgify::DataSample >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::DataSample >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::SyncRequest* Arena::CreateMaybeMessage< ::edgify::SyncRequest >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::SyncRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::SyncResponse* Arena::CreateMaybeMessage< ::edgify::SyncResponse >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::SyncResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::DeleteAllSamplesRequest* Arena::CreateMaybeMessage< ::edgify::DeleteAllSamplesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::DeleteAllSamplesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::DeleteAllSamplesResponse* Arena::CreateMaybeMessage< ::edgify::DeleteAllSamplesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::DeleteAllSamplesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::DeleteSamplesRequest* Arena::CreateMaybeMessage< ::edgify::DeleteSamplesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::DeleteSamplesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::DeleteSampleResponse* Arena::CreateMaybeMessage< ::edgify::DeleteSampleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::DeleteSampleResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::DeleteSampleRequest* Arena::CreateMaybeMessage< ::edgify::DeleteSampleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::DeleteSampleRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edgify::DeleteSamplesResponse* Arena::CreateMaybeMessage< ::edgify::DeleteSamplesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::edgify::DeleteSamplesResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
