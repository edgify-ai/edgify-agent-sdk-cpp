// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prediction.proto

#include "prediction.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace edgify {
constexpr PredictionItem::PredictionItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(){}
struct PredictionItemDefaultTypeInternal {
  constexpr PredictionItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PredictionItemDefaultTypeInternal() {}
  union {
    PredictionItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PredictionItemDefaultTypeInternal _PredictionItem_default_instance_;
constexpr Prediction::Prediction(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : predictions_()
  , uuid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , predicted_at_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , source_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , image_(nullptr)
  , duration_(0u)
  , model_id_(0u)
  , certain_(false){}
struct PredictionDefaultTypeInternal {
  constexpr PredictionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PredictionDefaultTypeInternal() {}
  union {
    Prediction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PredictionDefaultTypeInternal _Prediction_default_instance_;
constexpr Image::Image(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : uuid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , group_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ImageDefaultTypeInternal {
  constexpr ImageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ImageDefaultTypeInternal() {}
  union {
    Image _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ImageDefaultTypeInternal _Image_default_instance_;
constexpr ModelDeployment::ModelDeployment(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : model_path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , config_path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , created_at_(nullptr)
  , id_(0u)
  , model_id_(0u)
  , verified_(false){}
struct ModelDeploymentDefaultTypeInternal {
  constexpr ModelDeploymentDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ModelDeploymentDefaultTypeInternal() {}
  union {
    ModelDeployment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ModelDeploymentDefaultTypeInternal _ModelDeployment_default_instance_;
constexpr GroundTruth::GroundTruth(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : label_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , source_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , prediction_(nullptr){}
struct GroundTruthDefaultTypeInternal {
  constexpr GroundTruthDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GroundTruthDefaultTypeInternal() {}
  union {
    GroundTruth _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GroundTruthDefaultTypeInternal _GroundTruth_default_instance_;
constexpr PredictionRequest::PredictionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : source_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , image_(nullptr)
  , withoutprediction_(false){}
struct PredictionRequestDefaultTypeInternal {
  constexpr PredictionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PredictionRequestDefaultTypeInternal() {}
  union {
    PredictionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PredictionRequestDefaultTypeInternal _PredictionRequest_default_instance_;
constexpr PredictionResponse::PredictionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : prediction_(nullptr){}
struct PredictionResponseDefaultTypeInternal {
  constexpr PredictionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PredictionResponseDefaultTypeInternal() {}
  union {
    PredictionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PredictionResponseDefaultTypeInternal _PredictionResponse_default_instance_;
constexpr GroundTruthRequest::GroundTruthRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : source_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , ground_truth_(nullptr){}
struct GroundTruthRequestDefaultTypeInternal {
  constexpr GroundTruthRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GroundTruthRequestDefaultTypeInternal() {}
  union {
    GroundTruthRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GroundTruthRequestDefaultTypeInternal _GroundTruthRequest_default_instance_;
constexpr GroundTruthResponse::GroundTruthResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GroundTruthResponseDefaultTypeInternal {
  constexpr GroundTruthResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GroundTruthResponseDefaultTypeInternal() {}
  union {
    GroundTruthResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GroundTruthResponseDefaultTypeInternal _GroundTruthResponse_default_instance_;
constexpr GetCurrentModelDeploymentRequest::GetCurrentModelDeploymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetCurrentModelDeploymentRequestDefaultTypeInternal {
  constexpr GetCurrentModelDeploymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetCurrentModelDeploymentRequestDefaultTypeInternal() {}
  union {
    GetCurrentModelDeploymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetCurrentModelDeploymentRequestDefaultTypeInternal _GetCurrentModelDeploymentRequest_default_instance_;
constexpr GetCurrentModelDeploymentResponse::GetCurrentModelDeploymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : model_deployment_(nullptr){}
struct GetCurrentModelDeploymentResponseDefaultTypeInternal {
  constexpr GetCurrentModelDeploymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetCurrentModelDeploymentResponseDefaultTypeInternal() {}
  union {
    GetCurrentModelDeploymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetCurrentModelDeploymentResponseDefaultTypeInternal _GetCurrentModelDeploymentResponse_default_instance_;
}  // namespace edgify
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_prediction_2eproto[11];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_prediction_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_prediction_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_prediction_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::edgify::PredictionItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::edgify::PredictionItem, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::edgify::Prediction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::edgify::Prediction, uuid_),
  PROTOBUF_FIELD_OFFSET(::edgify::Prediction, duration_),
  PROTOBUF_FIELD_OFFSET(::edgify::Prediction, predicted_at_),
  PROTOBUF_FIELD_OFFSET(::edgify::Prediction, model_id_),
  PROTOBUF_FIELD_OFFSET(::edgify::Prediction, predictions_),
  PROTOBUF_FIELD_OFFSET(::edgify::Prediction, image_),
  PROTOBUF_FIELD_OFFSET(::edgify::Prediction, source_),
  PROTOBUF_FIELD_OFFSET(::edgify::Prediction, certain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::edgify::Image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::edgify::Image, uuid_),
  PROTOBUF_FIELD_OFFSET(::edgify::Image, image_),
  PROTOBUF_FIELD_OFFSET(::edgify::Image, group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::edgify::ModelDeployment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::edgify::ModelDeployment, id_),
  PROTOBUF_FIELD_OFFSET(::edgify::ModelDeployment, model_id_),
  PROTOBUF_FIELD_OFFSET(::edgify::ModelDeployment, model_path_),
  PROTOBUF_FIELD_OFFSET(::edgify::ModelDeployment, config_path_),
  PROTOBUF_FIELD_OFFSET(::edgify::ModelDeployment, verified_),
  PROTOBUF_FIELD_OFFSET(::edgify::ModelDeployment, created_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::edgify::GroundTruth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::edgify::GroundTruth, prediction_),
  PROTOBUF_FIELD_OFFSET(::edgify::GroundTruth, label_),
  PROTOBUF_FIELD_OFFSET(::edgify::GroundTruth, source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::edgify::PredictionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::edgify::PredictionRequest, image_),
  PROTOBUF_FIELD_OFFSET(::edgify::PredictionRequest, withoutprediction_),
  PROTOBUF_FIELD_OFFSET(::edgify::PredictionRequest, source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::edgify::PredictionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::edgify::PredictionResponse, prediction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::edgify::GroundTruthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::edgify::GroundTruthRequest, ground_truth_),
  PROTOBUF_FIELD_OFFSET(::edgify::GroundTruthRequest, source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::edgify::GroundTruthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::edgify::GetCurrentModelDeploymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::edgify::GetCurrentModelDeploymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::edgify::GetCurrentModelDeploymentResponse, model_deployment_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::edgify::PredictionItem)},
  { 6, -1, sizeof(::edgify::Prediction)},
  { 19, -1, sizeof(::edgify::Image)},
  { 27, -1, sizeof(::edgify::ModelDeployment)},
  { 38, -1, sizeof(::edgify::GroundTruth)},
  { 46, -1, sizeof(::edgify::PredictionRequest)},
  { 54, -1, sizeof(::edgify::PredictionResponse)},
  { 60, -1, sizeof(::edgify::GroundTruthRequest)},
  { 67, -1, sizeof(::edgify::GroundTruthResponse)},
  { 72, -1, sizeof(::edgify::GetCurrentModelDeploymentRequest)},
  { 77, -1, sizeof(::edgify::GetCurrentModelDeploymentResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::edgify::_PredictionItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::edgify::_Prediction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::edgify::_Image_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::edgify::_ModelDeployment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::edgify::_GroundTruth_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::edgify::_PredictionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::edgify::_PredictionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::edgify::_GroundTruthRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::edgify::_GroundTruthResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::edgify::_GetCurrentModelDeploymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::edgify::_GetCurrentModelDeploymentResponse_default_instance_),
};

const char descriptor_table_protodef_prediction_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020prediction.proto\022\006edgify\032\037google/proto"
  "buf/timestamp.proto\"\036\n\016PredictionItem\022\014\n"
  "\004data\030\001 \003(\t\"\300\001\n\nPrediction\022\014\n\004uuid\030\001 \001(\t"
  "\022\020\n\010duration\030\002 \001(\r\022\024\n\014predicted_at\030\003 \001(\t"
  "\022\020\n\010model_id\030\004 \001(\r\022+\n\013predictions\030\005 \003(\0132"
  "\026.edgify.PredictionItem\022\034\n\005image\030\006 \001(\0132\r"
  ".edgify.Image\022\016\n\006source\030\007 \001(\t\022\017\n\007certain"
  "\030\010 \001(\010\"6\n\005Image\022\014\n\004uuid\030\001 \001(\t\022\r\n\005image\030\002"
  " \001(\014\022\020\n\010group_id\030\003 \001(\t\"\232\001\n\017ModelDeployme"
  "nt\022\n\n\002id\030\001 \001(\r\022\020\n\010model_id\030\002 \001(\r\022\022\n\nmode"
  "l_path\030\003 \001(\t\022\023\n\013config_path\030\004 \001(\t\022\020\n\010ver"
  "ified\030\005 \001(\010\022.\n\ncreated_at\030\006 \001(\0132\032.google"
  ".protobuf.Timestamp\"T\n\013GroundTruth\022&\n\npr"
  "ediction\030\001 \001(\0132\022.edgify.Prediction\022\r\n\005la"
  "bel\030\002 \001(\t\022\016\n\006source\030\003 \001(\t\"\\\n\021PredictionR"
  "equest\022\034\n\005image\030\001 \001(\0132\r.edgify.Image\022\031\n\021"
  "withoutPrediction\030\002 \001(\010\022\016\n\006source\030\003 \001(\t\""
  "<\n\022PredictionResponse\022&\n\nprediction\030\001 \001("
  "\0132\022.edgify.Prediction\"O\n\022GroundTruthRequ"
  "est\022)\n\014ground_truth\030\001 \001(\0132\023.edgify.Groun"
  "dTruth\022\016\n\006source\030\002 \001(\t\"\025\n\023GroundTruthRes"
  "ponse\"\"\n GetCurrentModelDeploymentReques"
  "t\"V\n!GetCurrentModelDeploymentResponse\0221"
  "\n\020model_deployment\030\001 \001(\0132\027.edgify.ModelD"
  "eployment2\235\002\n\rEdgifyService\022H\n\rGetPredic"
  "tion\022\031.edgify.PredictionRequest\032\032.edgify"
  ".PredictionResponse\"\000\022N\n\021CreateGroundTru"
  "th\022\032.edgify.GroundTruthRequest\032\033.edgify."
  "GroundTruthResponse\"\000\022r\n\031GetCurrentModel"
  "Deployment\022(.edgify.GetCurrentModelDeplo"
  "ymentRequest\032).edgify.GetCurrentModelDep"
  "loymentResponse\"\000B\nZ\010edgifypbb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_prediction_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_prediction_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_prediction_2eproto = {
  false, false, 1277, descriptor_table_protodef_prediction_2eproto, "prediction.proto", 
  &descriptor_table_prediction_2eproto_once, descriptor_table_prediction_2eproto_deps, 1, 11,
  schemas, file_default_instances, TableStruct_prediction_2eproto::offsets,
  file_level_metadata_prediction_2eproto, file_level_enum_descriptors_prediction_2eproto, file_level_service_descriptors_prediction_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_prediction_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_prediction_2eproto);
  return descriptor_table_prediction_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_prediction_2eproto(&descriptor_table_prediction_2eproto);
namespace edgify {

// ===================================================================

class PredictionItem::_Internal {
 public:
};

PredictionItem::PredictionItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:edgify.PredictionItem)
}
PredictionItem::PredictionItem(const PredictionItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:edgify.PredictionItem)
}

void PredictionItem::SharedCtor() {
}

PredictionItem::~PredictionItem() {
  // @@protoc_insertion_point(destructor:edgify.PredictionItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictionItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PredictionItem::ArenaDtor(void* object) {
  PredictionItem* _this = reinterpret_cast< PredictionItem* >(object);
  (void)_this;
}
void PredictionItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictionItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PredictionItem::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.PredictionItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictionItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_data();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "edgify.PredictionItem.data"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictionItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:edgify.PredictionItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string data = 1;
  for (int i = 0, n = this->_internal_data_size(); i < n; i++) {
    const auto& s = this->_internal_data(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "edgify.PredictionItem.data");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.PredictionItem)
  return target;
}

size_t PredictionItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.PredictionItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string data = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(data_.size());
  for (int i = 0, n = data_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      data_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictionItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.PredictionItem)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictionItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.PredictionItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.PredictionItem)
    MergeFrom(*source);
  }
}

void PredictionItem::MergeFrom(const PredictionItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.PredictionItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void PredictionItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.PredictionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionItem::CopyFrom(const PredictionItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.PredictionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionItem::IsInitialized() const {
  return true;
}

void PredictionItem::InternalSwap(PredictionItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictionItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Prediction::_Internal {
 public:
  static const ::edgify::Image& image(const Prediction* msg);
};

const ::edgify::Image&
Prediction::_Internal::image(const Prediction* msg) {
  return *msg->image_;
}
Prediction::Prediction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  predictions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:edgify.Prediction)
}
Prediction::Prediction(const Prediction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      predictions_(from.predictions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  predicted_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_predicted_at().empty()) {
    predicted_at_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_predicted_at(), 
      GetArena());
  }
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source().empty()) {
    source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source(), 
      GetArena());
  }
  if (from._internal_has_image()) {
    image_ = new ::edgify::Image(*from.image_);
  } else {
    image_ = nullptr;
  }
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&certain_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(certain_));
  // @@protoc_insertion_point(copy_constructor:edgify.Prediction)
}

void Prediction::SharedCtor() {
uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
predicted_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&image_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&certain_) -
    reinterpret_cast<char*>(&image_)) + sizeof(certain_));
}

Prediction::~Prediction() {
  // @@protoc_insertion_point(destructor:edgify.Prediction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Prediction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  predicted_at_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete image_;
}

void Prediction::ArenaDtor(void* object) {
  Prediction* _this = reinterpret_cast< Prediction* >(object);
  (void)_this;
}
void Prediction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Prediction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Prediction::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.Prediction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  predictions_.Clear();
  uuid_.ClearToEmpty();
  predicted_at_.ClearToEmpty();
  source_.ClearToEmpty();
  if (GetArena() == nullptr && image_ != nullptr) {
    delete image_;
  }
  image_ = nullptr;
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&certain_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(certain_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Prediction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "edgify.Prediction.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 duration = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string predicted_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_predicted_at();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "edgify.Prediction.predicted_at"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 model_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          model_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .edgify.PredictionItem predictions = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_predictions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // .edgify.Image image = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_image(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "edgify.Prediction.source"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool certain = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          certain_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Prediction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:edgify.Prediction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "edgify.Prediction.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // uint32 duration = 2;
  if (this->duration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_duration(), target);
  }

  // string predicted_at = 3;
  if (this->predicted_at().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_predicted_at().data(), static_cast<int>(this->_internal_predicted_at().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "edgify.Prediction.predicted_at");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_predicted_at(), target);
  }

  // uint32 model_id = 4;
  if (this->model_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_model_id(), target);
  }

  // repeated .edgify.PredictionItem predictions = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_predictions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_predictions(i), target, stream);
  }

  // .edgify.Image image = 6;
  if (this->has_image()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::image(this), target, stream);
  }

  // string source = 7;
  if (this->source().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "edgify.Prediction.source");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_source(), target);
  }

  // bool certain = 8;
  if (this->certain() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_certain(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.Prediction)
  return target;
}

size_t Prediction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.Prediction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .edgify.PredictionItem predictions = 5;
  total_size += 1UL * this->_internal_predictions_size();
  for (const auto& msg : this->predictions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string predicted_at = 3;
  if (this->predicted_at().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_predicted_at());
  }

  // string source = 7;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // .edgify.Image image = 6;
  if (this->has_image()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *image_);
  }

  // uint32 duration = 2;
  if (this->duration() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_duration());
  }

  // uint32 model_id = 4;
  if (this->model_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_model_id());
  }

  // bool certain = 8;
  if (this->certain() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Prediction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.Prediction)
  GOOGLE_DCHECK_NE(&from, this);
  const Prediction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Prediction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.Prediction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.Prediction)
    MergeFrom(*source);
  }
}

void Prediction::MergeFrom(const Prediction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.Prediction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  predictions_.MergeFrom(from.predictions_);
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.predicted_at().size() > 0) {
    _internal_set_predicted_at(from._internal_predicted_at());
  }
  if (from.source().size() > 0) {
    _internal_set_source(from._internal_source());
  }
  if (from.has_image()) {
    _internal_mutable_image()->::edgify::Image::MergeFrom(from._internal_image());
  }
  if (from.duration() != 0) {
    _internal_set_duration(from._internal_duration());
  }
  if (from.model_id() != 0) {
    _internal_set_model_id(from._internal_model_id());
  }
  if (from.certain() != 0) {
    _internal_set_certain(from._internal_certain());
  }
}

void Prediction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.Prediction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Prediction::CopyFrom(const Prediction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.Prediction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Prediction::IsInitialized() const {
  return true;
}

void Prediction::InternalSwap(Prediction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  predictions_.InternalSwap(&other->predictions_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  predicted_at_.Swap(&other->predicted_at_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_.Swap(&other->source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Prediction, certain_)
      + sizeof(Prediction::certain_)
      - PROTOBUF_FIELD_OFFSET(Prediction, image_)>(
          reinterpret_cast<char*>(&image_),
          reinterpret_cast<char*>(&other->image_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Prediction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Image::_Internal {
 public:
};

Image::Image(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:edgify.Image)
}
Image::Image(const Image& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image(), 
      GetArena());
  }
  group_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_group_id().empty()) {
    group_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_group_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:edgify.Image)
}

void Image::SharedCtor() {
uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
group_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Image::~Image() {
  // @@protoc_insertion_point(destructor:edgify.Image)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Image::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Image::ArenaDtor(void* object) {
  Image* _this = reinterpret_cast< Image* >(object);
  (void)_this;
}
void Image::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Image::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.Image)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmpty();
  image_.ClearToEmpty();
  group_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Image::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "edgify.Image.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes image = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string group_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_group_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "edgify.Image.group_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Image::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:edgify.Image)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "edgify.Image.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_image(), target);
  }

  // string group_id = 3;
  if (this->group_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group_id().data(), static_cast<int>(this->_internal_group_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "edgify.Image.group_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.Image)
  return target;
}

size_t Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.Image)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_image());
  }

  // string group_id = 3;
  if (this->group_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Image::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.Image)
  GOOGLE_DCHECK_NE(&from, this);
  const Image* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Image>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.Image)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.Image)
    MergeFrom(*source);
  }
}

void Image::MergeFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.image().size() > 0) {
    _internal_set_image(from._internal_image());
  }
  if (from.group_id().size() > 0) {
    _internal_set_group_id(from._internal_group_id());
  }
}

void Image::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Image::IsInitialized() const {
  return true;
}

void Image::InternalSwap(Image* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_.Swap(&other->image_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  group_id_.Swap(&other->group_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Image::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ModelDeployment::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const ModelDeployment* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
ModelDeployment::_Internal::created_at(const ModelDeployment* msg) {
  return *msg->created_at_;
}
void ModelDeployment::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
ModelDeployment::ModelDeployment(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:edgify.ModelDeployment)
}
ModelDeployment::ModelDeployment(const ModelDeployment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  model_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_path().empty()) {
    model_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_model_path(), 
      GetArena());
  }
  config_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_config_path().empty()) {
    config_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_config_path(), 
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&verified_) -
    reinterpret_cast<char*>(&id_)) + sizeof(verified_));
  // @@protoc_insertion_point(copy_constructor:edgify.ModelDeployment)
}

void ModelDeployment::SharedCtor() {
model_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
config_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&created_at_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&verified_) -
    reinterpret_cast<char*>(&created_at_)) + sizeof(verified_));
}

ModelDeployment::~ModelDeployment() {
  // @@protoc_insertion_point(destructor:edgify.ModelDeployment)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelDeployment::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  model_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  config_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
}

void ModelDeployment::ArenaDtor(void* object) {
  ModelDeployment* _this = reinterpret_cast< ModelDeployment* >(object);
  (void)_this;
}
void ModelDeployment::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelDeployment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelDeployment::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.ModelDeployment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_path_.ClearToEmpty();
  config_path_.ClearToEmpty();
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&verified_) -
      reinterpret_cast<char*>(&id_)) + sizeof(verified_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelDeployment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 model_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          model_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model_path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_model_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "edgify.ModelDeployment.model_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string config_path = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_config_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "edgify.ModelDeployment.config_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool verified = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          verified_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelDeployment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:edgify.ModelDeployment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // uint32 model_id = 2;
  if (this->model_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_model_id(), target);
  }

  // string model_path = 3;
  if (this->model_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_path().data(), static_cast<int>(this->_internal_model_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "edgify.ModelDeployment.model_path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_model_path(), target);
  }

  // string config_path = 4;
  if (this->config_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_path().data(), static_cast<int>(this->_internal_config_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "edgify.ModelDeployment.config_path");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_config_path(), target);
  }

  // bool verified = 5;
  if (this->verified() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_verified(), target);
  }

  // .google.protobuf.Timestamp created_at = 6;
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::created_at(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.ModelDeployment)
  return target;
}

size_t ModelDeployment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.ModelDeployment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string model_path = 3;
  if (this->model_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_path());
  }

  // string config_path = 4;
  if (this->config_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_path());
  }

  // .google.protobuf.Timestamp created_at = 6;
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // uint32 model_id = 2;
  if (this->model_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_model_id());
  }

  // bool verified = 5;
  if (this->verified() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelDeployment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.ModelDeployment)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelDeployment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelDeployment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.ModelDeployment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.ModelDeployment)
    MergeFrom(*source);
  }
}

void ModelDeployment::MergeFrom(const ModelDeployment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.ModelDeployment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.model_path().size() > 0) {
    _internal_set_model_path(from._internal_model_path());
  }
  if (from.config_path().size() > 0) {
    _internal_set_config_path(from._internal_config_path());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.model_id() != 0) {
    _internal_set_model_id(from._internal_model_id());
  }
  if (from.verified() != 0) {
    _internal_set_verified(from._internal_verified());
  }
}

void ModelDeployment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.ModelDeployment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelDeployment::CopyFrom(const ModelDeployment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.ModelDeployment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelDeployment::IsInitialized() const {
  return true;
}

void ModelDeployment::InternalSwap(ModelDeployment* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  model_path_.Swap(&other->model_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  config_path_.Swap(&other->config_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModelDeployment, verified_)
      + sizeof(ModelDeployment::verified_)
      - PROTOBUF_FIELD_OFFSET(ModelDeployment, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelDeployment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GroundTruth::_Internal {
 public:
  static const ::edgify::Prediction& prediction(const GroundTruth* msg);
};

const ::edgify::Prediction&
GroundTruth::_Internal::prediction(const GroundTruth* msg) {
  return *msg->prediction_;
}
GroundTruth::GroundTruth(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:edgify.GroundTruth)
}
GroundTruth::GroundTruth(const GroundTruth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_label().empty()) {
    label_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_label(), 
      GetArena());
  }
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source().empty()) {
    source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source(), 
      GetArena());
  }
  if (from._internal_has_prediction()) {
    prediction_ = new ::edgify::Prediction(*from.prediction_);
  } else {
    prediction_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:edgify.GroundTruth)
}

void GroundTruth::SharedCtor() {
label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
prediction_ = nullptr;
}

GroundTruth::~GroundTruth() {
  // @@protoc_insertion_point(destructor:edgify.GroundTruth)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GroundTruth::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete prediction_;
}

void GroundTruth::ArenaDtor(void* object) {
  GroundTruth* _this = reinterpret_cast< GroundTruth* >(object);
  (void)_this;
}
void GroundTruth::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GroundTruth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GroundTruth::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.GroundTruth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_.ClearToEmpty();
  source_.ClearToEmpty();
  if (GetArena() == nullptr && prediction_ != nullptr) {
    delete prediction_;
  }
  prediction_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroundTruth::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .edgify.Prediction prediction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_prediction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string label = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_label();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "edgify.GroundTruth.label"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "edgify.GroundTruth.source"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GroundTruth::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:edgify.GroundTruth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .edgify.Prediction prediction = 1;
  if (this->has_prediction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::prediction(this), target, stream);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_label().data(), static_cast<int>(this->_internal_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "edgify.GroundTruth.label");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_label(), target);
  }

  // string source = 3;
  if (this->source().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "edgify.GroundTruth.source");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_source(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.GroundTruth)
  return target;
}

size_t GroundTruth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.GroundTruth)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_label());
  }

  // string source = 3;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // .edgify.Prediction prediction = 1;
  if (this->has_prediction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *prediction_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroundTruth::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.GroundTruth)
  GOOGLE_DCHECK_NE(&from, this);
  const GroundTruth* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GroundTruth>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.GroundTruth)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.GroundTruth)
    MergeFrom(*source);
  }
}

void GroundTruth::MergeFrom(const GroundTruth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.GroundTruth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.label().size() > 0) {
    _internal_set_label(from._internal_label());
  }
  if (from.source().size() > 0) {
    _internal_set_source(from._internal_source());
  }
  if (from.has_prediction()) {
    _internal_mutable_prediction()->::edgify::Prediction::MergeFrom(from._internal_prediction());
  }
}

void GroundTruth::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.GroundTruth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroundTruth::CopyFrom(const GroundTruth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.GroundTruth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroundTruth::IsInitialized() const {
  return true;
}

void GroundTruth::InternalSwap(GroundTruth* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  label_.Swap(&other->label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_.Swap(&other->source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(prediction_, other->prediction_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroundTruth::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PredictionRequest::_Internal {
 public:
  static const ::edgify::Image& image(const PredictionRequest* msg);
};

const ::edgify::Image&
PredictionRequest::_Internal::image(const PredictionRequest* msg) {
  return *msg->image_;
}
PredictionRequest::PredictionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:edgify.PredictionRequest)
}
PredictionRequest::PredictionRequest(const PredictionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source().empty()) {
    source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source(), 
      GetArena());
  }
  if (from._internal_has_image()) {
    image_ = new ::edgify::Image(*from.image_);
  } else {
    image_ = nullptr;
  }
  withoutprediction_ = from.withoutprediction_;
  // @@protoc_insertion_point(copy_constructor:edgify.PredictionRequest)
}

void PredictionRequest::SharedCtor() {
source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&image_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&withoutprediction_) -
    reinterpret_cast<char*>(&image_)) + sizeof(withoutprediction_));
}

PredictionRequest::~PredictionRequest() {
  // @@protoc_insertion_point(destructor:edgify.PredictionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete image_;
}

void PredictionRequest::ArenaDtor(void* object) {
  PredictionRequest* _this = reinterpret_cast< PredictionRequest* >(object);
  (void)_this;
}
void PredictionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PredictionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.PredictionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_.ClearToEmpty();
  if (GetArena() == nullptr && image_ != nullptr) {
    delete image_;
  }
  image_ = nullptr;
  withoutprediction_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .edgify.Image image = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_image(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool withoutPrediction = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          withoutprediction_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "edgify.PredictionRequest.source"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:edgify.PredictionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .edgify.Image image = 1;
  if (this->has_image()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::image(this), target, stream);
  }

  // bool withoutPrediction = 2;
  if (this->withoutprediction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_withoutprediction(), target);
  }

  // string source = 3;
  if (this->source().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "edgify.PredictionRequest.source");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_source(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.PredictionRequest)
  return target;
}

size_t PredictionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.PredictionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string source = 3;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // .edgify.Image image = 1;
  if (this->has_image()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *image_);
  }

  // bool withoutPrediction = 2;
  if (this->withoutprediction() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.PredictionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.PredictionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.PredictionRequest)
    MergeFrom(*source);
  }
}

void PredictionRequest::MergeFrom(const PredictionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.PredictionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source().size() > 0) {
    _internal_set_source(from._internal_source());
  }
  if (from.has_image()) {
    _internal_mutable_image()->::edgify::Image::MergeFrom(from._internal_image());
  }
  if (from.withoutprediction() != 0) {
    _internal_set_withoutprediction(from._internal_withoutprediction());
  }
}

void PredictionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.PredictionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionRequest::CopyFrom(const PredictionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.PredictionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionRequest::IsInitialized() const {
  return true;
}

void PredictionRequest::InternalSwap(PredictionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  source_.Swap(&other->source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PredictionRequest, withoutprediction_)
      + sizeof(PredictionRequest::withoutprediction_)
      - PROTOBUF_FIELD_OFFSET(PredictionRequest, image_)>(
          reinterpret_cast<char*>(&image_),
          reinterpret_cast<char*>(&other->image_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PredictionResponse::_Internal {
 public:
  static const ::edgify::Prediction& prediction(const PredictionResponse* msg);
};

const ::edgify::Prediction&
PredictionResponse::_Internal::prediction(const PredictionResponse* msg) {
  return *msg->prediction_;
}
PredictionResponse::PredictionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:edgify.PredictionResponse)
}
PredictionResponse::PredictionResponse(const PredictionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_prediction()) {
    prediction_ = new ::edgify::Prediction(*from.prediction_);
  } else {
    prediction_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:edgify.PredictionResponse)
}

void PredictionResponse::SharedCtor() {
prediction_ = nullptr;
}

PredictionResponse::~PredictionResponse() {
  // @@protoc_insertion_point(destructor:edgify.PredictionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete prediction_;
}

void PredictionResponse::ArenaDtor(void* object) {
  PredictionResponse* _this = reinterpret_cast< PredictionResponse* >(object);
  (void)_this;
}
void PredictionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PredictionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.PredictionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && prediction_ != nullptr) {
    delete prediction_;
  }
  prediction_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .edgify.Prediction prediction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_prediction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:edgify.PredictionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .edgify.Prediction prediction = 1;
  if (this->has_prediction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::prediction(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.PredictionResponse)
  return target;
}

size_t PredictionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.PredictionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .edgify.Prediction prediction = 1;
  if (this->has_prediction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *prediction_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.PredictionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.PredictionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.PredictionResponse)
    MergeFrom(*source);
  }
}

void PredictionResponse::MergeFrom(const PredictionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.PredictionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_prediction()) {
    _internal_mutable_prediction()->::edgify::Prediction::MergeFrom(from._internal_prediction());
  }
}

void PredictionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.PredictionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionResponse::CopyFrom(const PredictionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.PredictionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionResponse::IsInitialized() const {
  return true;
}

void PredictionResponse::InternalSwap(PredictionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(prediction_, other->prediction_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GroundTruthRequest::_Internal {
 public:
  static const ::edgify::GroundTruth& ground_truth(const GroundTruthRequest* msg);
};

const ::edgify::GroundTruth&
GroundTruthRequest::_Internal::ground_truth(const GroundTruthRequest* msg) {
  return *msg->ground_truth_;
}
GroundTruthRequest::GroundTruthRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:edgify.GroundTruthRequest)
}
GroundTruthRequest::GroundTruthRequest(const GroundTruthRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source().empty()) {
    source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source(), 
      GetArena());
  }
  if (from._internal_has_ground_truth()) {
    ground_truth_ = new ::edgify::GroundTruth(*from.ground_truth_);
  } else {
    ground_truth_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:edgify.GroundTruthRequest)
}

void GroundTruthRequest::SharedCtor() {
source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
ground_truth_ = nullptr;
}

GroundTruthRequest::~GroundTruthRequest() {
  // @@protoc_insertion_point(destructor:edgify.GroundTruthRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GroundTruthRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ground_truth_;
}

void GroundTruthRequest::ArenaDtor(void* object) {
  GroundTruthRequest* _this = reinterpret_cast< GroundTruthRequest* >(object);
  (void)_this;
}
void GroundTruthRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GroundTruthRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GroundTruthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.GroundTruthRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_.ClearToEmpty();
  if (GetArena() == nullptr && ground_truth_ != nullptr) {
    delete ground_truth_;
  }
  ground_truth_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroundTruthRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .edgify.GroundTruth ground_truth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ground_truth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "edgify.GroundTruthRequest.source"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GroundTruthRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:edgify.GroundTruthRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .edgify.GroundTruth ground_truth = 1;
  if (this->has_ground_truth()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::ground_truth(this), target, stream);
  }

  // string source = 2;
  if (this->source().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "edgify.GroundTruthRequest.source");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_source(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.GroundTruthRequest)
  return target;
}

size_t GroundTruthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.GroundTruthRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string source = 2;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // .edgify.GroundTruth ground_truth = 1;
  if (this->has_ground_truth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ground_truth_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroundTruthRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.GroundTruthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GroundTruthRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GroundTruthRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.GroundTruthRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.GroundTruthRequest)
    MergeFrom(*source);
  }
}

void GroundTruthRequest::MergeFrom(const GroundTruthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.GroundTruthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source().size() > 0) {
    _internal_set_source(from._internal_source());
  }
  if (from.has_ground_truth()) {
    _internal_mutable_ground_truth()->::edgify::GroundTruth::MergeFrom(from._internal_ground_truth());
  }
}

void GroundTruthRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.GroundTruthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroundTruthRequest::CopyFrom(const GroundTruthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.GroundTruthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroundTruthRequest::IsInitialized() const {
  return true;
}

void GroundTruthRequest::InternalSwap(GroundTruthRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  source_.Swap(&other->source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(ground_truth_, other->ground_truth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroundTruthRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GroundTruthResponse::_Internal {
 public:
};

GroundTruthResponse::GroundTruthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:edgify.GroundTruthResponse)
}
GroundTruthResponse::GroundTruthResponse(const GroundTruthResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:edgify.GroundTruthResponse)
}

void GroundTruthResponse::SharedCtor() {
}

GroundTruthResponse::~GroundTruthResponse() {
  // @@protoc_insertion_point(destructor:edgify.GroundTruthResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GroundTruthResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GroundTruthResponse::ArenaDtor(void* object) {
  GroundTruthResponse* _this = reinterpret_cast< GroundTruthResponse* >(object);
  (void)_this;
}
void GroundTruthResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GroundTruthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GroundTruthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.GroundTruthResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroundTruthResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GroundTruthResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:edgify.GroundTruthResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.GroundTruthResponse)
  return target;
}

size_t GroundTruthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.GroundTruthResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroundTruthResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.GroundTruthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GroundTruthResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GroundTruthResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.GroundTruthResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.GroundTruthResponse)
    MergeFrom(*source);
  }
}

void GroundTruthResponse::MergeFrom(const GroundTruthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.GroundTruthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GroundTruthResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.GroundTruthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroundTruthResponse::CopyFrom(const GroundTruthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.GroundTruthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroundTruthResponse::IsInitialized() const {
  return true;
}

void GroundTruthResponse::InternalSwap(GroundTruthResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroundTruthResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetCurrentModelDeploymentRequest::_Internal {
 public:
};

GetCurrentModelDeploymentRequest::GetCurrentModelDeploymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:edgify.GetCurrentModelDeploymentRequest)
}
GetCurrentModelDeploymentRequest::GetCurrentModelDeploymentRequest(const GetCurrentModelDeploymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:edgify.GetCurrentModelDeploymentRequest)
}

void GetCurrentModelDeploymentRequest::SharedCtor() {
}

GetCurrentModelDeploymentRequest::~GetCurrentModelDeploymentRequest() {
  // @@protoc_insertion_point(destructor:edgify.GetCurrentModelDeploymentRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCurrentModelDeploymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetCurrentModelDeploymentRequest::ArenaDtor(void* object) {
  GetCurrentModelDeploymentRequest* _this = reinterpret_cast< GetCurrentModelDeploymentRequest* >(object);
  (void)_this;
}
void GetCurrentModelDeploymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCurrentModelDeploymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCurrentModelDeploymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.GetCurrentModelDeploymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCurrentModelDeploymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCurrentModelDeploymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:edgify.GetCurrentModelDeploymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.GetCurrentModelDeploymentRequest)
  return target;
}

size_t GetCurrentModelDeploymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.GetCurrentModelDeploymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCurrentModelDeploymentRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.GetCurrentModelDeploymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCurrentModelDeploymentRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCurrentModelDeploymentRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.GetCurrentModelDeploymentRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.GetCurrentModelDeploymentRequest)
    MergeFrom(*source);
  }
}

void GetCurrentModelDeploymentRequest::MergeFrom(const GetCurrentModelDeploymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.GetCurrentModelDeploymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetCurrentModelDeploymentRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.GetCurrentModelDeploymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCurrentModelDeploymentRequest::CopyFrom(const GetCurrentModelDeploymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.GetCurrentModelDeploymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCurrentModelDeploymentRequest::IsInitialized() const {
  return true;
}

void GetCurrentModelDeploymentRequest::InternalSwap(GetCurrentModelDeploymentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCurrentModelDeploymentRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetCurrentModelDeploymentResponse::_Internal {
 public:
  static const ::edgify::ModelDeployment& model_deployment(const GetCurrentModelDeploymentResponse* msg);
};

const ::edgify::ModelDeployment&
GetCurrentModelDeploymentResponse::_Internal::model_deployment(const GetCurrentModelDeploymentResponse* msg) {
  return *msg->model_deployment_;
}
GetCurrentModelDeploymentResponse::GetCurrentModelDeploymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:edgify.GetCurrentModelDeploymentResponse)
}
GetCurrentModelDeploymentResponse::GetCurrentModelDeploymentResponse(const GetCurrentModelDeploymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_model_deployment()) {
    model_deployment_ = new ::edgify::ModelDeployment(*from.model_deployment_);
  } else {
    model_deployment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:edgify.GetCurrentModelDeploymentResponse)
}

void GetCurrentModelDeploymentResponse::SharedCtor() {
model_deployment_ = nullptr;
}

GetCurrentModelDeploymentResponse::~GetCurrentModelDeploymentResponse() {
  // @@protoc_insertion_point(destructor:edgify.GetCurrentModelDeploymentResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCurrentModelDeploymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete model_deployment_;
}

void GetCurrentModelDeploymentResponse::ArenaDtor(void* object) {
  GetCurrentModelDeploymentResponse* _this = reinterpret_cast< GetCurrentModelDeploymentResponse* >(object);
  (void)_this;
}
void GetCurrentModelDeploymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCurrentModelDeploymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCurrentModelDeploymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:edgify.GetCurrentModelDeploymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && model_deployment_ != nullptr) {
    delete model_deployment_;
  }
  model_deployment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCurrentModelDeploymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .edgify.ModelDeployment model_deployment = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_model_deployment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCurrentModelDeploymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:edgify.GetCurrentModelDeploymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .edgify.ModelDeployment model_deployment = 1;
  if (this->has_model_deployment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::model_deployment(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgify.GetCurrentModelDeploymentResponse)
  return target;
}

size_t GetCurrentModelDeploymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgify.GetCurrentModelDeploymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .edgify.ModelDeployment model_deployment = 1;
  if (this->has_model_deployment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *model_deployment_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCurrentModelDeploymentResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgify.GetCurrentModelDeploymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCurrentModelDeploymentResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCurrentModelDeploymentResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgify.GetCurrentModelDeploymentResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgify.GetCurrentModelDeploymentResponse)
    MergeFrom(*source);
  }
}

void GetCurrentModelDeploymentResponse::MergeFrom(const GetCurrentModelDeploymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgify.GetCurrentModelDeploymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_model_deployment()) {
    _internal_mutable_model_deployment()->::edgify::ModelDeployment::MergeFrom(from._internal_model_deployment());
  }
}

void GetCurrentModelDeploymentResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgify.GetCurrentModelDeploymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCurrentModelDeploymentResponse::CopyFrom(const GetCurrentModelDeploymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgify.GetCurrentModelDeploymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCurrentModelDeploymentResponse::IsInitialized() const {
  return true;
}

void GetCurrentModelDeploymentResponse::InternalSwap(GetCurrentModelDeploymentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(model_deployment_, other->model_deployment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCurrentModelDeploymentResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace edgify
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::edgify::PredictionItem* Arena::CreateMaybeMessage< ::edgify::PredictionItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::edgify::PredictionItem >(arena);
}
template<> PROTOBUF_NOINLINE ::edgify::Prediction* Arena::CreateMaybeMessage< ::edgify::Prediction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::edgify::Prediction >(arena);
}
template<> PROTOBUF_NOINLINE ::edgify::Image* Arena::CreateMaybeMessage< ::edgify::Image >(Arena* arena) {
  return Arena::CreateMessageInternal< ::edgify::Image >(arena);
}
template<> PROTOBUF_NOINLINE ::edgify::ModelDeployment* Arena::CreateMaybeMessage< ::edgify::ModelDeployment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::edgify::ModelDeployment >(arena);
}
template<> PROTOBUF_NOINLINE ::edgify::GroundTruth* Arena::CreateMaybeMessage< ::edgify::GroundTruth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::edgify::GroundTruth >(arena);
}
template<> PROTOBUF_NOINLINE ::edgify::PredictionRequest* Arena::CreateMaybeMessage< ::edgify::PredictionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::edgify::PredictionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::edgify::PredictionResponse* Arena::CreateMaybeMessage< ::edgify::PredictionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::edgify::PredictionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::edgify::GroundTruthRequest* Arena::CreateMaybeMessage< ::edgify::GroundTruthRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::edgify::GroundTruthRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::edgify::GroundTruthResponse* Arena::CreateMaybeMessage< ::edgify::GroundTruthResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::edgify::GroundTruthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::edgify::GetCurrentModelDeploymentRequest* Arena::CreateMaybeMessage< ::edgify::GetCurrentModelDeploymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::edgify::GetCurrentModelDeploymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::edgify::GetCurrentModelDeploymentResponse* Arena::CreateMaybeMessage< ::edgify::GetCurrentModelDeploymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::edgify::GetCurrentModelDeploymentResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
